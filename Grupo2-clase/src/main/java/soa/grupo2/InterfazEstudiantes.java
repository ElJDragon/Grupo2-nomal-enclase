/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package soa.grupo2;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ramir
 */
public class InterfazEstudiantes extends javax.swing.JFrame {

    /**
     * Creates new form InterfazEstudiantes
     */
    DefaultTableModel modelo;
    ClienteEstudiantes cliente;
    
    // Nuevos componentes
    private javax.swing.JButton jBtnCancelar;
    private javax.swing.JButton jBtnAgregar;
    private javax.swing.JTextField jTxtBuscar;
    private javax.swing.JLabel jLabelBuscar;
    private javax.swing.JButton jBtnBuscar;

    public InterfazEstudiantes() {
        initComponents();
        cliente = new ClienteEstudiantes();
        
        // Agregar componentes adicionales
        agregarComponentesAdicionales();
        
        cargarTablaEstudiantes();
        
        // Establecer estado inicial (campos deshabilitados, solo Agregar habilitado)
        estadoInicial();
        
        // Agregar listener para cuando se selecciona una fila en la tabla
        jtblEstudiantes.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cargarDatosDeFilaSeleccionada();
            }
        });
    }

    public void cargarTablaEstudiantes() {
        System.out.println("Actualizando tabla de estudiantes...");
        String[] titulos = {"CÉDULA", "NOMBRE", "APELLIDO", "DIRECCIÓN", "TELÉFONO"};
        String[] registros = new String[5];
        modelo = new DefaultTableModel(null, titulos);

        ArrayList<Estudiante> estudiantes = cliente.obtenerEstudiantes();
        if (estudiantes != null && !estudiantes.isEmpty()) {
            System.out.println("Se encontraron " + estudiantes.size() + " estudiantes");
            for (Estudiante estudiante : estudiantes) {
                registros[0] = estudiante.getCEDULA();
                registros[1] = estudiante.getNOMBRE();
                registros[2] = estudiante.getAPELLIDO();
                registros[3] = estudiante.getDIRECCION();
                registros[4] = estudiante.getTELEFONO();      
                modelo.addRow(registros);
            }
            
        } else {
            System.out.println("No hay estudiantes o la lista es null");
        }
        jtblEstudiantes.setModel(modelo);
        // Forzar actualización visual
        jtblEstudiantes.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblEstudiantes = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTxtCedula = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTxtNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTxtApellido = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTxtDireccion = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTxtTelefono = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jbtnGuardar = new javax.swing.JButton();
        jBtnDelete = new javax.swing.JButton();
        jBtnEdit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jtblEstudiantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtblEstudiantes);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Cedula");

        jLabel2.setText("Nombre");

        jLabel3.setText("Apellido");

        jLabel4.setText("Direccion");

        jLabel5.setText("Telefono");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(48, 48, 48)
                            .addComponent(jTxtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(48, 48, 48)
                            .addComponent(jTxtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(48, 48, 48)
                                .addComponent(jTxtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTxtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(51, 51, 51)
                        .addComponent(jTxtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTxtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTxtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTxtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTxtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTxtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jbtnGuardar.setText("Guardar");
        jbtnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnGuardarActionPerformed(evt);
            }
        });

        jBtnDelete.setText("Eliminar");
        jBtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDeleteActionPerformed(evt);
            }
        });

        jBtnEdit.setText("Editar");
        jBtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtnEdit)
                    .addComponent(jBtnDelete)
                    .addComponent(jbtnGuardar))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbtnGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnEdit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnGuardarActionPerformed
    try {
        System.out.println("\n--- GUARDANDO ESTUDIANTE ---");
        // Get data from form fields
        String cedula = jTxtCedula.getText().trim();
        String nombre = jTxtNombre.getText().trim();
        String apellido = jTxtApellido.getText().trim();
        String direccion = jTxtDireccion.getText().trim();
        String telefono = jTxtTelefono.getText().trim();
        
        System.out.println("Datos a guardar: " + cedula + ", " + nombre + ", " + apellido);
        
        // Validate fields aren't empty
        if(cedula.isEmpty() || nombre.isEmpty() || apellido.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Los campos Cédula, Nombre y Apellido son obligatorios", 
                "Error de validación", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Create student object
        Estudiante estudiante = new Estudiante(cedula, nombre, apellido, direccion, telefono);
        
        // Save student
        boolean resultado = cliente.registrarestudiantes(estudiante);
        
        if(resultado) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Estudiante guardado correctamente", 
                "Éxito", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            System.out.println("Actualizando tabla después de guardar...");
            cargarTablaEstudiantes(); // Refresh table
            estadoInicial(); // Volver al estado inicial
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al guardar el estudiante", 
                "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    } catch(Exception e) {
        javax.swing.JOptionPane.showMessageDialog(this, 
            "Error: " + e.getMessage(), 
            "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
}//GEN-LAST:event_jbtnGuardarActionPerformed

    private void jBtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDeleteActionPerformed
        try {
        int fila = jtblEstudiantes.getSelectedRow();
        if (fila == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Debe seleccionar un estudiante de la tabla", 
                "Advertencia", javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String cedula = jtblEstudiantes.getValueAt(fila, 0).toString();
        
        int confirmacion = javax.swing.JOptionPane.showConfirmDialog(this,
            "¿Está seguro de eliminar este estudiante?",
            "Confirmar eliminación",
            javax.swing.JOptionPane.YES_NO_OPTION);
            
        if(confirmacion == javax.swing.JOptionPane.YES_OPTION) {
            boolean resultado = cliente.eliminarEstudiante(cedula);
            
            if(resultado) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "Estudiante eliminado correctamente", 
                    "Éxito", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                cargarTablaEstudiantes(); // Refresh table
                estadoInicial(); // Volver al estado inicial
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "Error al eliminar el estudiante", 
                    "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }
    } catch(Exception e) {
        javax.swing.JOptionPane.showMessageDialog(this, 
            "Error: " + e.getMessage(), 
            "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
}//GEN-LAST:event_jBtnDeleteActionPerformed

    private void jBtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEditActionPerformed
    try {
        // Get data from form fields
        String cedula = jTxtCedula.getText().trim();
        String nombre = jTxtNombre.getText().trim();
        String apellido = jTxtApellido.getText().trim();
        String direccion = jTxtDireccion.getText().trim();
        String telefono = jTxtTelefono.getText().trim();
        
        // Validate fields aren't empty
        if(cedula.isEmpty() || nombre.isEmpty() || apellido.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Los campos Cédula, Nombre y Apellido son obligatorios", 
                "Error de validación", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Create student object
        Estudiante estudiante = new Estudiante(cedula, nombre, apellido, direccion, telefono);
        
        // Edit student
        boolean resultado = cliente.editarEstudiante(estudiante);
        
        if(resultado) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Estudiante actualizado correctamente", 
                "Éxito", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            cargarTablaEstudiantes(); // Refresh table
            estadoInicial(); // Volver al estado inicial
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "Error al actualizar el estudiante", 
                "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    } catch(Exception e) {
        javax.swing.JOptionPane.showMessageDialog(this, 
            "Error: " + e.getMessage(), 
            "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
}//GEN-LAST:event_jBtnEditActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazEstudiantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazEstudiantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazEstudiantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazEstudiantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazEstudiantes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnDelete;
    private javax.swing.JButton jBtnEdit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTxtApellido;
    private javax.swing.JTextField jTxtCedula;
    private javax.swing.JTextField jTxtDireccion;
    private javax.swing.JTextField jTxtNombre;
    private javax.swing.JTextField jTxtTelefono;
    private javax.swing.JButton jbtnGuardar;
    private javax.swing.JTable jtblEstudiantes;
    // End of variables declaration//GEN-END:variables

    private void agregarComponentesAdicionales() {
        // ===== Botón Agregar en jPanel3 (panel de botones) =====
        jBtnAgregar = new javax.swing.JButton();
        jBtnAgregar.setText("Agregar");
        jBtnAgregar.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estadoAgregar();
            }
        });
        
        // ===== Botón Cancelar en jPanel3 (panel de botones) =====
        jBtnCancelar = new javax.swing.JButton();
        jBtnCancelar.setText("Cancelar");
        jBtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estadoInicial();
            }
        });
        
        // Obtener el layout actual de jPanel3 y agregar los botones Agregar y Cancelar
        javax.swing.GroupLayout panel3Layout = (javax.swing.GroupLayout) jPanel3.getLayout();
        panel3Layout.setHorizontalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panel3Layout.setVerticalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jBtnAgregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnCancelar)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        
        // ===== Campo de búsqueda en jPanel1 (panel de la tabla) =====
        jLabelBuscar = new javax.swing.JLabel();
        jLabelBuscar.setText("Buscar por Cédula:");
        
        jTxtBuscar = new javax.swing.JTextField();
        jTxtBuscar.setColumns(10);
        
        jBtnBuscar = new javax.swing.JButton();
        jBtnBuscar.setText("Buscar");
        jBtnBuscar.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarEstudiantePorCedula();
            }
        });
        
        // Reorganizar el layout de jPanel1 para incluir el campo de búsqueda
        javax.swing.GroupLayout panel1Layout = (javax.swing.GroupLayout) jPanel1.getLayout();
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addComponent(jLabelBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTxtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnBuscar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelBuscar)
                    .addComponent(jTxtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }

    private void limpiarCampos() {
    jTxtCedula.setText("");
    jTxtNombre.setText("");
    jTxtApellido.setText("");
    jTxtDireccion.setText("");
    jTxtTelefono.setText("");
    jTxtCedula.requestFocus();
}
    
    private void cargarDatosDeFilaSeleccionada() {
        int fila = jtblEstudiantes.getSelectedRow();
        if (fila >= 0) {
            // Cargar los datos de la fila seleccionada en los campos de texto
            jTxtCedula.setText(jtblEstudiantes.getValueAt(fila, 0).toString());
            jTxtNombre.setText(jtblEstudiantes.getValueAt(fila, 1).toString());
            jTxtApellido.setText(jtblEstudiantes.getValueAt(fila, 2).toString());
            jTxtDireccion.setText(jtblEstudiantes.getValueAt(fila, 3).toString());
            jTxtTelefono.setText(jtblEstudiantes.getValueAt(fila, 4).toString());
            
            // Cambiar al estado de edición
            estadoEditar();
            
            System.out.println("Datos cargados de la fila: " + fila);
        }
    }
    
    private void buscarEstudiantePorCedula() {
        String cedulaBuscar = jTxtBuscar.getText().trim();
        
        if (cedulaBuscar.isEmpty()) {
            // Si el campo está vacío, mostrar todos los estudiantes
            cargarTablaEstudiantes();
            return;
        }
        
        
        // Filtrar la tabla por cédula
        String[] titulos = {"CÉDULA", "NOMBRE", "APELLIDO", "DIRECCIÓN", "TELÉFONO"};
        String[] registros = new String[5];
        modelo = new DefaultTableModel(null, titulos);
        
        ArrayList<Estudiante> estudiantes = cliente.obtenerEstudiantes();
        if (estudiantes != null && !estudiantes.isEmpty()) {
            boolean encontrado = false;
            for (Estudiante estudiante : estudiantes) {
                // Buscar por cédula (puede ser búsqueda exacta o parcial)
                if (estudiante.getCEDULA().contains(cedulaBuscar)) {
                    registros[0] = estudiante.getCEDULA();
                    registros[1] = estudiante.getNOMBRE();
                    registros[2] = estudiante.getAPELLIDO();
                    registros[3] = estudiante.getDIRECCION();
                    registros[4] = estudiante.getTELEFONO();      
                    modelo.addRow(registros);
                    encontrado = true;
                }
            }
            
            if (!encontrado) {
                javax.swing.JOptionPane.showMessageDialog(this, 
                    "No se encontró ningún estudiante con esa cédula", 
                    "Búsqueda", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            } else {
                System.out.println("Estudiante(s) encontrado(s)");
            }
        }
        
        jtblEstudiantes.setModel(modelo);
        jtblEstudiantes.repaint();
    }
    
    // ===== MÉTODOS PARA CONTROL DE ESTADOS =====
    
    /**
     * Estado inicial: Campos deshabilitados, solo botón Agregar habilitado
     */
    private void estadoInicial() {
        // Deshabilitar todos los campos
        jTxtCedula.setEnabled(false);
        jTxtNombre.setEnabled(false);
        jTxtApellido.setEnabled(false);
        jTxtDireccion.setEnabled(false);
        jTxtTelefono.setEnabled(false);
        
        // Limpiar campos
        limpiarCampos();
        
        // Botones: Solo Agregar habilitado
        jBtnAgregar.setEnabled(true);
        jbtnGuardar.setEnabled(false);
        jBtnEdit.setEnabled(false);
        jBtnDelete.setEnabled(false);
        jBtnCancelar.setEnabled(false);
        
        System.out.println("Estado: INICIAL - Solo Agregar habilitado");
    }
    
    /**
     * Estado para agregar: Habilitar campos para ingresar nuevo estudiante
     */
    private void estadoAgregar() {
        // Habilitar todos los campos
        jTxtCedula.setEnabled(true);
        jTxtNombre.setEnabled(true);
        jTxtApellido.setEnabled(true);
        jTxtDireccion.setEnabled(true);
        jTxtTelefono.setEnabled(true);
        
        // Limpiar campos
        limpiarCampos();
        
        // Botones: Deshabilitar Agregar, habilitar Guardar y Cancelar
        jBtnAgregar.setEnabled(false);
        jbtnGuardar.setEnabled(true);
        jBtnEdit.setEnabled(false);
        jBtnDelete.setEnabled(false);
        jBtnCancelar.setEnabled(true);
        
        // Poner foco en el campo de cédula
        jTxtCedula.requestFocus();
        
        System.out.println("Estado: AGREGAR - Campos habilitados para nuevo estudiante");
    }
    
    /**
     * Estado para editar: Habilitar campos excepto cédula
     */
    private void estadoEditar() {
        // Habilitar campos excepto cédula
        jTxtCedula.setEnabled(false); // Cédula no se puede editar
        jTxtNombre.setEnabled(true);
        jTxtApellido.setEnabled(true);
        jTxtDireccion.setEnabled(true);
        jTxtTelefono.setEnabled(true);
        
        // Botones: Habilitar Editar, Eliminar y Cancelar
        jBtnAgregar.setEnabled(false);
        jbtnGuardar.setEnabled(false);
        jBtnEdit.setEnabled(true);
        jBtnDelete.setEnabled(true);
        jBtnCancelar.setEnabled(true);
        
        System.out.println("Estado: EDITAR - Fila seleccionada, campos habilitados excepto cédula");
    }
}
